apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.lasone.android.sample"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "isPublish", "false"
            //是否进行混淆
            minifyEnabled false
            //混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "isPublish", "${isPublish}"
            minifyEnabled true
            //是否清理无用资源,依赖于minifyEnabled
            shrinkResources true
            //是否启用zipAlign压缩
            zipAlignEnabled true
            //混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //修改打包apk名称
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    // release版本
                    if (variant.buildType.name == 'release') {
                        outputFileName = "android_v${defaultConfig.versionName}.${releaseTime()}.apk"
                    } else {
                        outputFileName = "android_v${defaultConfig.versionName}.${releaseTime()}_debug.apk"
                    }
                }
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    //lib
    implementation project(':library')
}

// 定义一个打包时间
static def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("GMT+8"))
}